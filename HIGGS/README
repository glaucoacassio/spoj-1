SPOJ Problem Set (sulamericana)
3744. Bóson de Higgs
Problema: HIGGS 


Já passaram-se 100 anos desde a detecção do primeiro Bóson de Higgs e agora a física de partículas é uma matéria principal em todas escolas de ensino médio. Obviamente, as crianças adoram o fato de poderem criar pequenos buracos negros usando apenas seus aceleradores de partículas portáteis e mostrá-los para amigos e colegas. Apesar da criação de grandes buracos negros que poderiam engolir o planeta inteiro ser possível mesmo com esses aceleradores portáteis, os aparelhos estão programados para lançar partículas apenas quando esse efeito colateral indesejável não puder acontecer.

Sua neta está tentando criar buracos negros com um kit acelerador portátil, que é composto de dois pequenos aceleradores de partículas que jogam, cada um, uma partícula do tamanho de um bóson. Ambas partículas são jogadas simultaneamente, e um buraco negro aparece quando as partículas colidem. Entretanto, sua neta não sabe quanto tempo ela vai ter que esperar antes disso acontecer. Felizmente, cada acelerador pode prever a trajetória da partícula, mostrando quatro valores inteiros em seu mostrador, chamados A, B, C e D. Cada valor pode ser substituído nas seguintes equações:

r = At + B
? = Ct + D
para determinar a trajetória da partícula, em coordenadas polares. O raio (r) é representado em unidades de distância e o ângulo (?) em graus. O tempo (t) é dado em unidades de tempo e é sempre um valor racional que pode ser representado por uma fração irredutível. Sua neta sabe que em coordenadas polares um ponto tem infinitas representações. Em geral, o ponto (r, ?) pode ser representado como (r, ? ± k x 360°) ou (-r, ? ± (2k + 1) x 180°), onde k é qualquer inteiro. A origem (r = 0) pode ser representada como (0, ?) para qualquer ?. 

Usando esses parâmetros informados por cada acelerador de partículas, sua neta quer determinar se as partículas vão colidir e, se forem colidir, o momento em que o farão. Depois da primeira colisão é impossível prever a trajetória da partícula, portanto, apenas a primeira possível colisão deve ser considerada.

Apesar de sua neta ser muito inteligente e ter um profundo conhecimento de física de partículas, ela não sabe programar computadores e está procurando no carderno de seu avô (ou avó) por anotações (não se esqueça, ela é sua neta!). Felizmente para você, existe uma anotação no seu caderno que fala que você escreveu aquele código durante a Competição Regional Sul-Americana do ICPC de 2008 (ou, para ser mais exato, essa competição).

Entrada
A entrada consiste de vários casos de teste, um por linha. Cada caso de teste contém oito números inteiros separados por espaços, A1, B1, C1, D1, A2, B2, C2, D2 (-10^4 <= A1, B1, C1, D1, A2, B2, C2, D2 <= 10^4). Os primeiros quatro valores (A1, B1, C1, D1) correspondem aos quatro parâmetros mostrados pelo primeiro acelerador portátil e os valores de entrada seguintes (A2, B2, C2, D2) correspondem aos quatro parâmetros mostrados pelo segundo acelerador portátil quando ambas partículas são lançadas. O final da entrada é representado por A1 = B1 = C1 = D1, A2 = B2 = C2 = D2 = 0, que não deve ser processado como um caso de teste, uma vez que esses são os valores mostrados pelo acelerador de partículas quando um grande buraco negro seria criado se as partículas fossem lançadas. Embora o final da entrada seja representado por uma linha com oito zeros, note que o número zero é um valor de entrada possível.

Saída
Para cada caso de teste, seu programa deve imprimir uma linha contendo dois inteiros não-negativos ta e tb separados por um espaço. Se não houver possibilidade de colisão, ta = tb = 0, caso contrário ta / tb deve ser uma fração irredutível representando o tempo da primeira colisão. Mesmo se a fração resultar em um valor inteiro, você ainda deve imprimir o número 1 como denominador (veja os exemplos abaixo).


Exemplo de entrada
1 1 180 0 2 0 180 360
10 10 360 0 -24 18 180 72
5 5 180 0 -12 9 10 40
-9 5 5 180 2 5 5 180
0 0 0 0 0 0 0 0

Saída para o exemplo de entrada
1 1
0 0
4 17
0 1


--------------------------------------------------------------------------------
Adicionado por: Wanderley Guimarães 
Data: 2009-01-18 
Tempo limite: 1s  
Tamanho do fonte: 50000B 
Memory limit: 256MB 
Cluster: Pyramid (Intel Pentium III 733 MHz)  
Linguagem permitida: Todas exceto: AWK CLOJ ERL F# GO JS NODEJS PERL 6 PYTH 3.2.3 n SCALA SED TCL  
Origem: Final Sul-Americana da Maratona de Programação da ACM 2008 

--------------------------------------------------------------------------------

fonte: http://br.spoj.com/problems/HIGGS/